.Ltext0:
list_len:
	testq	%rdi, %rdi
	je	.L4
	movl	$0, %eax
.L3:
	addq	$1, %rax
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L3
	rep ret
.L4:
	movl	$0, %eax
	ret

list_len_clear:
	testq	%rdi, %rdi
	je	.L9
	movl	$0, %eax
.L8:
	movq	$0, 8(%rdi)
	movq	(%rdi), %rdi
	addq	$1, %rax
	testq	%rdi, %rdi
	jne	.L8
	rep ret
.L9:
	movl	$0, %eax
	ret

list_sum_clear:
	testq	%rdi, %rdi
	je	.L14
	movl	$0, %eax
.L13:
	addq	8(%rdi), %rax
	movq	$0, 8(%rdi)
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L13
	rep ret
.L14:
	movl	$0, %eax
	ret

list_sum:
	testq	%rdi, %rdi
	je	.L19
	movl	$0, %eax
.L18:
	addq	8(%rdi), %rax
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	jne	.L18
	rep ret
.L19:
	movl	$0, %eax
	ret

list_sum2:
	testq	%rdi, %rdi
	je	.L24
	movl	$0, %eax
.L23:
	movq	(%rdi), %rdx
	addq	8(%rdi), %rax
	movq	%rdx, %rdi
	testq	%rdx, %rdx
	jne	.L23
	rep ret
.L24:
	movl	$0, %eax
	ret

pipe_sum2:
	testq	%rdi, %rdi
	je	.L29
	movl	$0, %eax
.L28:
	movq	(%rdi), %rdx
	addq	8(%rdi), %rax
	movq	%rdx, %rdi
	testq	%rdx, %rdx
	jne	.L28
	rep ret
.L29:
	movl	$0, %eax
	ret

rlist_len:
	movl	$0, %eax
	testq	%rdi, %rdi
	je	.L36
	subq	$8, %rsp
	movq	(%rdi), %rdi
	call	rlist_len
	addq	$1, %rax
	addq	$8, %rsp
.L36:
	rep ret
rlist_sum:
	movl	$0, %eax
	testq	%rdi, %rdi
	je	.L42
	pushq	%rbx
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	call	rlist_sum
	addq	8(%rbx), %rax
	popq	%rbx
.L42:
	rep ret
list_copy:
	testq	%rdi, %rdi
	je	.L43
	testq	%rsi, %rsi
	je	.L43
.L47:
	movq	8(%rdi), %rax
	movq	%rax, 8(%rsi)
	movq	(%rdi), %rdi
	movq	(%rsi), %rsi
	testq	%rdi, %rdi
	je	.L43
	testq	%rsi, %rsi
	jne	.L47
.L43:
	rep ret
plist_copy:
	testq	%rdi, %rdi
	je	.L49
	testq	%rsi, %rsi
	je	.L49
.L53:
	movq	(%rsi), %rdx
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rsi)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	testq	%rax, %rax
	je	.L49
	testq	%rdx, %rdx
	jne	.L53
.L49:
	rep ret
plist_copy2:
	testq	%rdi, %rdi
	je	.L55
	testq	%rsi, %rsi
	je	.L55
.L59:
	movq	(%rdi), %rax
	movq	(%rsi), %rdx
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rsi)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	testq	%rax, %rax
	je	.L55
	testq	%rdx, %rdx
	jne	.L59
.L55:
	rep ret
stationary_copy:
	movl	$1024, %eax
.L62:
	movq	8(%rdi), %rdx
	movq	%rdx, 8(%rsi)
	subq	$1, %rax
	jne	.L62
	rep ret
test:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	leaq	-1(%rdi), %rbx
	salq	$4, %rbx
	movq	main_list(%rbx), %rbp
	movq	$0, main_list(%rbx)
	movl	$main_list, %edi
	movq	myindex(%rip), %rax
	call	*test_fun(,%rax,8)
	movq	%rbp, main_list(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

test2a:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	leaq	-1(%rdi), %rbx
	salq	$4, %rbx
	movq	main_list(%rbx), %rbp
	movq	$0, main_list(%rbx)
	movl	$main_list, %esi
	movq	%rsi, %rdi
	movq	myindex(%rip), %rax
	call	*test2_fun(,%rax,8)
	movq	%rbp, main_list(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

test2b:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	leaq	-1(%rdi), %rbx
	salq	$4, %rbx
	movq	main_list(%rbx), %rbp
	movq	$0, main_list(%rbx)
	movq	main_list(%rip), %rsi
	movl	$main_list, %edi
	movq	myindex(%rip), %rax
	call	*test2_fun(,%rax,8)
	movq	%rbp, main_list(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

test2c:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	leaq	-1(%rdi), %rbx
	salq	$4, %rbx
	movq	main_list(%rbx), %rbp
	movq	$0, main_list(%rbx)
	movl	$main_list, %esi
	movq	main_list(%rip), %rdi
	movq	myindex(%rip), %rax
	call	*test2_fun(,%rax,8)
	movq	%rbp, main_list(%rbx)
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

mylink:
	leaq	-1(%rdi), %rsi
	testq	%rsi, %rsi
	jle	.L73
	movl	$main_list+16, %eax
	movq	%rsi, %rcx
	movl	$0, %edx
.L74:
	movq	%rdx, -8(%rax)
	addq	$1, %rdx
	movq	%rax, -16(%rax)
	addq	$16, %rax
	cmpq	%rcx, %rdx
	jne	.L74
.L73:
	movq	%rsi, %rax
	salq	$4, %rax
	movq	%rsi, main_list+8(%rax)
	movq	$0, main_list(%rax)
	ret

main:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	movl	$0, %ebx
.L77:
	movl	$1024, %edi
	call	mylink
	movl	$main_list, %edi
	call	*test_fun(,%rbx,8)
	movq	%rax, %r8
	movq	test_descr(,%rbx,8), %rdx
	movl	$1024, %ecx
	movl	$.LC0, %esi
	movl	$1, %edi
	movl	$0, %eax
	call	__printf_chk
	movq	%rbx, myindex(%rip)
	movl	$1024, %esi
	movl	$test, %edi
	call	find_cpe
	movl	$.LC1, %esi
	movl	$1, %edi
	movl	$1, %eax
	call	__printf_chk
	addq	$1, %rbx
	cmpq	$8, %rbx
	jne	.L77
	movl	$0, %ebp
	jmp	.L78
.L79:
	movl	$1024, %edi
	call	mylink
	movq	case2_descr(%rbx), %rcx
	movq	test2_descr(,%rbp,8), %rdx
	movl	$.LC2, %esi
	movl	$1, %edi
	movl	$0, %eax
	call	__printf_chk
	movq	%rbp, myindex(%rip)
	movq	case_fun(%rbx), %rdi
	movl	$1024, %esi
	call	find_cpe
	movl	$.LC1, %esi
	movl	$1, %edi
	movl	$1, %eax
	call	__printf_chk
	addq	$8, %rbx
	cmpq	$24, %rbx
	jne	.L79
	addq	$1, %rbp
	cmpq	$4, %rbp
	je	.L80
.L78:
	movl	$0, %ebx
	jmp	.L79
.L80:
	movl	$0, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

case2_descr:
case_fun:
test2_descr:
test2_fun:
test_descr:
test_fun:
.Letext0:
.Ldebug_info0:
.Ldebug_abbrev0:
.Ldebug_loc0:
.Ldebug_line0:
